// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_files.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif


 #import "SyncFiles.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - SyncFilesRoot

@implementation SyncFilesRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - SyncFilesRoot_FileDescriptor

static GPBFileDescriptor *SyncFilesRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"sync.files"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - MetaData

@implementation MetaData

@dynamic name;
@dynamic path;
@dynamic thumbnail;
@dynamic preview;
@dynamic tagArray, tagArray_Count;
@dynamic type;
@dynamic locationArray, locationArray_Count;
@dynamic createTime;
@dynamic updateTime;
@dynamic resolutionArray, resolutionArray_Count;
@dynamic size;
@dynamic action;
@dynamic duration;
@dynamic hasAny, any;

typedef struct MetaData__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSString *path;
  NSString *thumbnail;
  NSString *preview;
  NSMutableArray *tagArray;
  NSString *type;
  GPBDoubleArray *locationArray;
  GPBInt32Array *resolutionArray;
  NSString *action;
  GPBAny *any;
  int64_t createTime;
  int64_t updateTime;
  int64_t size;
  int64_t duration;
} MetaData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MetaData__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "path",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Path,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MetaData__storage_, path),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thumbnail",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Thumbnail,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MetaData__storage_, thumbnail),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "preview",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Preview,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MetaData__storage_, preview),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tagArray",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_TagArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MetaData__storage_, tagArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MetaData__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "locationArray",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_LocationArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MetaData__storage_, locationArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MetaData__storage_, createTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_UpdateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MetaData__storage_, updateTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "resolutionArray",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_ResolutionArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MetaData__storage_, resolutionArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Size,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(MetaData__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "action",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Action,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(MetaData__storage_, action),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "duration",
        .dataTypeSpecific.className = NULL,
        .number = MetaData_FieldNumber_Duration,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(MetaData__storage_, duration),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "any",
        .dataTypeSpecific.className = GPBStringifySymbol(GPBAny),
        .number = MetaData_FieldNumber_Any,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(MetaData__storage_, any),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MetaData class]
                                     rootClass:[SyncFilesRoot class]
                                          file:SyncFilesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MetaData__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ModifyData

@implementation ModifyData

@dynamic name;
@dynamic path;
@dynamic newName;
@dynamic newPath;
@dynamic action;
@dynamic createTime;
@dynamic updateTime;
@dynamic hasAny, any;

typedef struct ModifyData__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSString *path;
  NSString *newName;
  NSString *newPath;
  NSString *action;
  GPBAny *any;
  int64_t createTime;
  int64_t updateTime;
} ModifyData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ModifyData__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "path",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_Path,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ModifyData__storage_, path),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newName",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_NewName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ModifyData__storage_, newName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newPath",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_NewPath,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ModifyData__storage_, newPath),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "action",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_Action,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ModifyData__storage_, action),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ModifyData__storage_, createTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = ModifyData_FieldNumber_UpdateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ModifyData__storage_, updateTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "any",
        .dataTypeSpecific.className = GPBStringifySymbol(GPBAny),
        .number = ModifyData_FieldNumber_Any,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ModifyData__storage_, any),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ModifyData class]
                                     rootClass:[SyncFilesRoot class]
                                          file:SyncFilesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ModifyData__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
